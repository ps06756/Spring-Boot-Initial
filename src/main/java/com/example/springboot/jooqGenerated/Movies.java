/*
 * This file is generated by jOOQ.
 */
package com.example.springboot.jooqGenerated;


import com.example.springboot.jooqGenerated.tables.Country;
import com.example.springboot.jooqGenerated.tables.Department;
import com.example.springboot.jooqGenerated.tables.Gender;
import com.example.springboot.jooqGenerated.tables.Genre;
import com.example.springboot.jooqGenerated.tables.Keyword;
import com.example.springboot.jooqGenerated.tables.Language;
import com.example.springboot.jooqGenerated.tables.LanguageRole;
import com.example.springboot.jooqGenerated.tables.Movie;
import com.example.springboot.jooqGenerated.tables.MovieCast;
import com.example.springboot.jooqGenerated.tables.MovieCompany;
import com.example.springboot.jooqGenerated.tables.MovieCrew;
import com.example.springboot.jooqGenerated.tables.MovieGenres;
import com.example.springboot.jooqGenerated.tables.MovieKeywords;
import com.example.springboot.jooqGenerated.tables.MovieLanguages;
import com.example.springboot.jooqGenerated.tables.Person;
import com.example.springboot.jooqGenerated.tables.ProductionCompany;
import com.example.springboot.jooqGenerated.tables.ProductionCountry;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Movies extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>movies</code>
     */
    public static final Movies MOVIES = new Movies();

    /**
     * The table <code>movies.country</code>.
     */
    public final Country COUNTRY = Country.COUNTRY;

    /**
     * The table <code>movies.department</code>.
     */
    public final Department DEPARTMENT = Department.DEPARTMENT;

    /**
     * The table <code>movies.gender</code>.
     */
    public final Gender GENDER = Gender.GENDER;

    /**
     * The table <code>movies.genre</code>.
     */
    public final Genre GENRE = Genre.GENRE;

    /**
     * The table <code>movies.keyword</code>.
     */
    public final Keyword KEYWORD = Keyword.KEYWORD;

    /**
     * The table <code>movies.language</code>.
     */
    public final Language LANGUAGE = Language.LANGUAGE;

    /**
     * The table <code>movies.language_role</code>.
     */
    public final LanguageRole LANGUAGE_ROLE = LanguageRole.LANGUAGE_ROLE;

    /**
     * The table <code>movies.movie</code>.
     */
    public final Movie MOVIE = Movie.MOVIE;

    /**
     * The table <code>movies.movie_cast</code>.
     */
    public final MovieCast MOVIE_CAST = MovieCast.MOVIE_CAST;

    /**
     * The table <code>movies.movie_company</code>.
     */
    public final MovieCompany MOVIE_COMPANY = MovieCompany.MOVIE_COMPANY;

    /**
     * The table <code>movies.movie_crew</code>.
     */
    public final MovieCrew MOVIE_CREW = MovieCrew.MOVIE_CREW;

    /**
     * The table <code>movies.movie_genres</code>.
     */
    public final MovieGenres MOVIE_GENRES = MovieGenres.MOVIE_GENRES;

    /**
     * The table <code>movies.movie_keywords</code>.
     */
    public final MovieKeywords MOVIE_KEYWORDS = MovieKeywords.MOVIE_KEYWORDS;

    /**
     * The table <code>movies.movie_languages</code>.
     */
    public final MovieLanguages MOVIE_LANGUAGES = MovieLanguages.MOVIE_LANGUAGES;

    /**
     * The table <code>movies.person</code>.
     */
    public final Person PERSON = Person.PERSON;

    /**
     * The table <code>movies.production_company</code>.
     */
    public final ProductionCompany PRODUCTION_COMPANY = ProductionCompany.PRODUCTION_COMPANY;

    /**
     * The table <code>movies.production_country</code>.
     */
    public final ProductionCountry PRODUCTION_COUNTRY = ProductionCountry.PRODUCTION_COUNTRY;

    /**
     * No further instances allowed
     */
    private Movies() {
        super("movies", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Country.COUNTRY,
            Department.DEPARTMENT,
            Gender.GENDER,
            Genre.GENRE,
            Keyword.KEYWORD,
            Language.LANGUAGE,
            LanguageRole.LANGUAGE_ROLE,
            Movie.MOVIE,
            MovieCast.MOVIE_CAST,
            MovieCompany.MOVIE_COMPANY,
            MovieCrew.MOVIE_CREW,
            MovieGenres.MOVIE_GENRES,
            MovieKeywords.MOVIE_KEYWORDS,
            MovieLanguages.MOVIE_LANGUAGES,
            Person.PERSON,
            ProductionCompany.PRODUCTION_COMPANY,
            ProductionCountry.PRODUCTION_COUNTRY
        );
    }
}
