/*
 * This file is generated by jOOQ.
 */
package com.example.springboot.jooqGenerated.tables.records;


import com.example.springboot.jooqGenerated.tables.MovieCrew;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MovieCrewRecord extends TableRecordImpl<MovieCrewRecord> implements Record4<Integer, Integer, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>movies.movie_crew.movie_id</code>.
     */
    public void setMovieId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>movies.movie_crew.movie_id</code>.
     */
    public Integer getMovieId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>movies.movie_crew.person_id</code>.
     */
    public void setPersonId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>movies.movie_crew.person_id</code>.
     */
    public Integer getPersonId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>movies.movie_crew.department_id</code>.
     */
    public void setDepartmentId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>movies.movie_crew.department_id</code>.
     */
    public Integer getDepartmentId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>movies.movie_crew.job</code>.
     */
    public void setJob(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>movies.movie_crew.job</code>.
     */
    public String getJob() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, Integer, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return MovieCrew.MOVIE_CREW.MOVIE_ID;
    }

    @Override
    public Field<Integer> field2() {
        return MovieCrew.MOVIE_CREW.PERSON_ID;
    }

    @Override
    public Field<Integer> field3() {
        return MovieCrew.MOVIE_CREW.DEPARTMENT_ID;
    }

    @Override
    public Field<String> field4() {
        return MovieCrew.MOVIE_CREW.JOB;
    }

    @Override
    public Integer component1() {
        return getMovieId();
    }

    @Override
    public Integer component2() {
        return getPersonId();
    }

    @Override
    public Integer component3() {
        return getDepartmentId();
    }

    @Override
    public String component4() {
        return getJob();
    }

    @Override
    public Integer value1() {
        return getMovieId();
    }

    @Override
    public Integer value2() {
        return getPersonId();
    }

    @Override
    public Integer value3() {
        return getDepartmentId();
    }

    @Override
    public String value4() {
        return getJob();
    }

    @Override
    public MovieCrewRecord value1(Integer value) {
        setMovieId(value);
        return this;
    }

    @Override
    public MovieCrewRecord value2(Integer value) {
        setPersonId(value);
        return this;
    }

    @Override
    public MovieCrewRecord value3(Integer value) {
        setDepartmentId(value);
        return this;
    }

    @Override
    public MovieCrewRecord value4(String value) {
        setJob(value);
        return this;
    }

    @Override
    public MovieCrewRecord values(Integer value1, Integer value2, Integer value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MovieCrewRecord
     */
    public MovieCrewRecord() {
        super(MovieCrew.MOVIE_CREW);
    }

    /**
     * Create a detached, initialised MovieCrewRecord
     */
    public MovieCrewRecord(Integer movieId, Integer personId, Integer departmentId, String job) {
        super(MovieCrew.MOVIE_CREW);

        setMovieId(movieId);
        setPersonId(personId);
        setDepartmentId(departmentId);
        setJob(job);
    }
}
